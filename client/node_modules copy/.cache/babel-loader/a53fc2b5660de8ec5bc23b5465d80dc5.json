{"ast":null,"code":"var _jsxFileName = \"/Users/Beccy/Desktop/Coding Bootcamp/AUTH/reactAuth/auth-app/src/components/auth/Login.js\";\nimport React, { Component } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form, {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Email Adress\"), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, errors.email, errors.emailnotfound), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      className: classnames(\"\", {\n        invalid: errors.email || errors.emailnotfound\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, errors.password, errors.passwordincorrect), React.createElement(Form.Control, {\n      placeholder: \"Password\",\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password || errors.passwordincorrect\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/Beccy/Desktop/Coding Bootcamp/AUTH/reactAuth/auth-app/src/components/auth/Login.js"],"names":["React","Component","Button","Form","PropTypes","connect","loginUser","classnames","Login","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","email","state","password","props","errors","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","emailnotfound","invalid","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        {/* <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div> */}\n\n        <Form noValidate onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email Adress</Form.Label>\n            <span className=\"red-text\">\n              {errors.email}\n              {errors.emailnotfound}\n            </span>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              className={classnames(\"\", {\n                invalid: errors.email || errors.emailnotfound\n              })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <span className=\"red-text\">\n              {errors.password}\n              {errors.passwordincorrect}\n            </span>\n            <Form.Control\n              placeholder=\"Password\"\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: errors.password || errors.passwordincorrect\n              })}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n        {/* </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n"]},"metadata":{},"sourceType":"module"}